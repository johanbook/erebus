version: "3.9"

services:
  traefik:
    image: "traefik:v2.4"
    container_name: "traefik"
    network_mode: "host"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/var/log/erebus/:/var/log/erebus/"

  app:
    build: "./services/app"
    environment:
      LOG_DIR: "/var/log/erebus/"
    volumes:
      - "/var/log/erebus/:/var/log/erebus/"

  grafana:
    image: grafana/grafana:latest
    volumes:
      - "./config/grafana/datasources:/etc/grafana/provisioning/datasources/:ro"
      - "./config/grafana/dashboards:/etc/grafana/provisioning/dashboards/:ro"
      - "./data/grafana:/var/lib/grafana:rw"

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - "./data/postgres:/var/lib/postgresql/data:rw"

  loki:
    image: grafana/loki:2.4.1
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./config/loki/loki.yaml:/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:2.4.1
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - "./config/promtail/config.yml:/etc/promtail/config.yml:ro"
      - "/var/log:/var/log:ro"
      - "/var/lib/docker/containers/:/var/lib/docker/containers:ro"

  node-exporter:
    image: prom/node-exporter:latest
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
      - "--collector.systemd"
      - "--collector.processes"
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro

  prometheus:
    image: prom/prometheus:latest
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
    restart: unless-stopped
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  nextcloud:
    image: nextcloud
    environment:
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_HOST=db
    restart: always
    volumes:
      - "./data/nextcloud:/var/www/html:rw"
