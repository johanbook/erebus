version: "3.9"

networks:
  loki:

services:
  traefik:
    extends:
      file: "docker-compose.shared.yml"
      service: "traefik"
    command:
      # Expose Traefik Dashboard on 8080
      - "--api.insecure=true"

      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"

      - "--accesslog=true"
      - "--accesslog.filepath=/var/log/erebus/traefik.access.log"
      - "--accesslog.fields.headers.names.Host=keep"
      - "--accesslog.fields.headers.names.Referer=keep"
      - "--accesslog.fields.headers.names.User-Agent=keep"
      - "--accesslog.format=json"
      - "--log.filePath=/var/log/erebus/traefik.log"
      - "--log.format=json"
      - "--log.level=INFO"

      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"

      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=me@johanbook.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"

  app:
    extends:
      file: "docker-compose.shared.yml"
      service: "app"
    labels:
      - "traefik.enable=true"

      # Target router
      - "traefik.http.routers.app.rule=Host(`erebus.johanbook.com`)"
      - "traefik.http.routers.app.entrypoints=websecure"
      - "traefik.http.routers.app.tls.certresolver=myresolver"

  grafana:
    extends:
      file: "docker-compose.shared.yml"
      service: "grafana"
    labels:
      - "traefik.enable=true"

      # Target router
      - "traefik.http.routers.grafana.rule=Host(`grafana.erebus.johanbook.com`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=myresolver"

  loki:
    extends:
      file: "docker-compose.shared.yml"
      service: "loki"

  promtail:
    extends:
      file: "docker-compose.shared.yml"
      service: "promtail"

  node-exporter:
    extends:
      file: "docker-compose.shared.yml"
      service: "node-exporter"

  prometheus:
    extends:
      file: "docker-compose.shared.yml"
      service: "prometheus"
